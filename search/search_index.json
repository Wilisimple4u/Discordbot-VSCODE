{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Homepage","text":""},{"location":"#dockerdiscordbot","title":"DockerDiscordBot","text":"<p>Velkommen til min dokumentasjon.</p> <p>the logg.</p> <pre><code>22.11.23\nThe website is now made look you can read important stuff yay.\n</code></pre>"},{"location":"code/","title":"CODE!!!!!","text":"<p>Velkommen til min dokumentasjon.</p> <p>Imports: Note: Not all imports will be used but in my current code.  However they can be used to build upon it further. lol</p> <p>Step 1 the quest for request</p> <p>PLACEHOLDER</p> <p>PLACEHOLDER</p>"},{"location":"documentation/","title":"Documentation","text":"<pre><code>print(\"Hello world!\")\n</code></pre> <p>Slik installerer du ;)</p> <pre><code>pip install -r requirements.text\n</code></pre> <p>Terminal commands docs.</p> <pre><code># I did a thing in a place in a time\n# you want to copy/learn from it.\n\n\n## The Process\n\n\n### Discord stuff\nIn order to run the discordbot:\nYou need to have made your own discordbot on discord.\nYou will also need the token needed to connect to it.\n\n#\n\n### Python stuff\n\nBy Importing my code into Pycharm or whatever, \nyou can run this beautiful mess of a code.\nYou should then be able to both run it through pycharm as well as docker container.\nRemember to change the &lt;TOKEN&gt; in the run.bat file,\nInto the discord token you are going to be using.\n\n#\n\n### Docker stuff\n\nTo make it easier on myself and others like me,\nI have added bashfiles that can run the docker commends for you in python.\n\n#\n\n### To build/create the container in docker:\nCopythis into the terminal with the file selected --&gt;  .\\build.bat\n\n#\n\n### To Start/run the container after building it in docker:\n\nCopythis into the terminal with the file selected --&gt;  .\\run.bat\n\n22.11.23\n#writing down some terminal commands, so I don't forget how to get mkdocs running.\n\npip install mkdocs-material\n#Add on adminastrative privliges: --user\n\nmkdocs serve \n#if this don't work use the one below\npython -m mkdocs serve\n\n#Add on to mkdocs serve: --dev-addr=0.0.0.0:8000\n#insert own value on where and what port to host it on.\n\n23.11.23\n#writing down some terminal commands, \nso I don't forget how to get the discord bot running on my server.\n\n\n#Step 1 after server#\nGetting vsftpd\n(sudo apt install vsftpd)\n\n\nEditing the vsftpd file:\n(sudo nano /etc/vsftpd.conf)\n\nMake sure the (write_enable=YES) does not have a # infront of it,\nand is actually set to YES.\n\n\nRestart the vsftpd service:\n(sudo service vsftpd restart)\nor\n(sudo systemctl restart vsftpd.service)\nNot both, it would be redundant.\n\n\ngets the project and adds it as a file:\n(git clone (Link to project))\n\n\nEnter the file\n(cd \"FileName\")\n\n\n(sudo apt install openssh-server)\n\n\n(sudo apt-get upgrade -y)\n\n\nGetting host name server's designation\n(hostname -I)\n\n\nInstalling docker to server:\n(sudo apt install docker.io)\n\n\nBuild the docker container:\n(sudo docker build -t discord .)\n\n\nFor the DiscordBotDocker to run spesifically it will need the token,\n(sudo docker run -e Token=TOKEN)\n\n\n\nSetting up a docker composer file to do all the docker process for me\nHint: way simpler.\nEditing the docker-compose.yml\n(nano NAME.yml)\n\n\nGood idea to make a directory for the dockercompose file\n(mkdir NAME)\n\n\nIf I inevitably make mistakes,\nI can use this to remove the docker file and try again:\n(rm -rd Filename)\n</code></pre> <p>My Docker-composer file should look like this.</p> <pre><code>services:\n  discordbot:\n    build:\n    restart: unless-stopped (good enough for this current project)\n    environment:\n      - Token=TOKEN\n</code></pre>"}]}